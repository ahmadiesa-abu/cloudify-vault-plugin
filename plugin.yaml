plugins:
  vault:
    executor: central_deployment_agent
    package_name: 'cloudify-vault-plugin'
    package_version: '1.0.2'

dsl_definitions:

  client_config: &client_config
    client_config:
      type: cloudify.types.vault.ClientConfig
      description: Your Vault client configuration.
      required: false

  executor_user_config: &executor_user_config
    executor_user_config:
      type: cloudify.types.vault.ExecutorConfig
      description: >
        Cloudify Manager User that should execute the workflows.
      required: false

data_types:

  cloudify.types.vault.ClientConfig:
    properties:
      url:
        description: Vault URL.
        type: string
        default: ''
      token:
        description: User Token used to authenticate to Vault.
        type: string
        default: ''
      use_api_client_token:
        type: boolean
        description: >
          Auto-generate and use a new API Client token with adequate
          policies for managing Vault resources. If set to false, plugin
          will use the Master Token for all operations.
        required: false
        default: false
      client_token_policies:
        type: list
        description: >
          Valid only when `use_api_client_token` is enabled. A list of
          policies to be granted for new API Client token.
        required: false
        default: [secret]

  cloudify.types.vault.ExecutorConfig:
    properties:
      username:
        description: Cloudify Manager User name.
        type: string
        default: ''
        required: false
      password:
        description: Cloudify Manager User password.
        type: string
        default: ''
        required: false
      # token:
      #   description: Cloudify Manager User token.
      #   type: string
      #   default: ''
      #   required: false

  cloudify.types.vault.Secret:
    properties:
      secret_key:
        description: Secret Key [Path]
        type: string
        default: ''
      secret_value:
        description: Secret Value
        default: {}
      create_secret:
        description: >
          A condition whether to store the secret value in Cloudify
          Manager secrets.
        type: boolean
        default: false
      secret_name:
        description: >
          Name of the secret created in Cloudify secrets. Used when
          create_secret flag is enabled.
        type: string
        default: ''
      mount_point:
        description: >
          A mount_point parameter that can be used to address the KvV1
          secret engine under a custom mount path. The full path of the
          secret inside Vault.
        type: string
        default: 'secret'


node_types:

  cloudify.nodes.vault.Secret:
    derived_from: cloudify.nodes.Root
    properties:
      <<: *client_config
      <<: *executor_user_config
      use_external_resource:
        type: boolean
        description: >
          Reference existing resource given the key. Get the value of an
          existing secret.
        required: false
      create_if_missing:
        type: boolean
        description: >
          If using use_external_resource and secret not found, create it.
        required: false
      resource_config:
        type: cloudify.types.vault.Secret
        description: Vault Secret type
        required: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: vault.cloudify_vault.tasks.create_secret
        update:
          implementation: vault.cloudify_vault.tasks.update_secret
        delete:
          implementation: vault.cloudify_vault.tasks.delete_secret

  cloudify.nodes.vault.Bunch_secrets:
    derived_from: cloudify.nodes.Root
    properties:
      <<: *client_config
      <<: *executor_user_config
      use_external_resource:
        type: boolean
        description: >
          Reference existing resources given the keys. Get values of
          existing secrets.
        required: false
      create_if_missing:
        type: boolean
        description: >
          If using use_external_resource and secrets not found, create
          them.
        required: false
      resource_config:
        type: list
        description: List of vault.Secret type objects
        required: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: vault.cloudify_vault.tasks.bunch_create_secrets
        update:
          implementation: vault.cloudify_vault.tasks.bunch_update_secrets
        delete:
          implementation: vault.cloudify_vault.tasks.bunch_delete_secrets


workflows:
  execute_with_secrets:
    mapping: vault.cloudify_vault.workflows.execute_with_secrets
    parameters:
      workflow_id:
        type: string
        description: |
          ID of the workflow to be executed on target deployment.
      workflow_params:
        default: {}
        description: |
          Parameters of target workflow.
      workflow_node_ids:
        type: list
        default: []
        description: |
          List of node ID's that the workflow should be run on.
          If empty and `workflow_node_instance_ids` not provided, run on
          every Component node.
      workflow_node_instance_ids:
        type: list
        default: []
        description: |
          List of node instance ID's that the workflow should be run on.
      secrets_node_ids:
        type: list
        description: |
          List of node ID's that are used to handle the secrets from
          Vault.
        default: []
      secrets_node_instance_ids:
        type: list
        description: |
          List of node ID's that are used to handle the secrets from
          Vault.
        default: []
